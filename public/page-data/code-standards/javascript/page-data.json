{"componentChunkName":"component---src-templates-code-standard-doc-js","path":"/code-standards/javascript","result":{"data":{"contentfulCodeStandard":{"id":"5a415256-f2af-5e98-aedd-dd21fcd65920","name":"Javascript","content":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"JavaScript defines the behavior and interaction of the application.\"), mdx(\"p\", null, \"JavaScript should be used sparingly. Any and all JavaScript code should be included if, and only if, it is needed for the page to achieve the desired ends, e.g.: when a behavior or interaction cannot be achieved with HTML or CSS alone.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript should be valid\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No console errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript should be DRY\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Be re-usable whenever possible\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript should be unobtrusive, fast, efficient, and performant\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Included after careful consideration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Executed only when necessary\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Evaluated for performance overhead, file size, and maintainability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Performs only the necessary tasks without needless overhead\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Does not contain HTML, CSS, or hard-coded text content\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Writing HTML in a JavaScript file makes the content harder to find, harder to edit, and less performant\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keep text content external for translations and content management\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript should be scoped appropriately\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Minimize the use of globally scoped variables\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use const and let when declaring variables for better scoping and error messaging\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use closures or object literals to avoid global scope\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript should have the absence or failure of the code carefully considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What happens if for some reason this code is missing or does not run?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What happens if the code triggers an error?\")))), mdx(\"h2\", null, \"Naming Conventions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Function and variable names should be descriptive of what they do or represent\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Boolean values should be prefixed with \\\"is\\\" whenever possible\")), mdx(\"h2\", null, \"Formatting\"), mdx(\"p\", null, \"In order to increase readability, please adhere to the following formatting standards.\"), mdx(\"h3\", null, \"Comments\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write self-explanatory or \\\"self-commenting\\\" code supplemented by code comments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain what a JavaScript file does at the top of the file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain what a function does, and make note of required parameters and their types\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain any segments of code that could come across as confusing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mark TODOs and action items with a TODO comment\")), mdx(\"h3\", null, \"Casing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Variable names should be camelCase\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Objects, classes, and namespaces should be TitleCase\")), mdx(\"h2\", null, \"Organization\"), mdx(\"p\", null, \"JavaScript should exist in its own file and imported into the document via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<script>\"), \" tag at the bottom of the body. Some cases may require it to be imported in the head instead.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"updatedAt":"2021-09-17T03:21:24.160Z"}},"pageContext":{"id":"5a415256-f2af-5e98-aedd-dd21fcd65920","slug":"/code-standards/javascript"}},"staticQueryHashes":["2841359383"]}